# Задание 3
# Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь,
# в котором ключи — первые буквы имен, а значения — списки, содержащие имена, начинающиеся с соответствующей буквы.
# Например:
# >>> >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"], "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Сможете ли вы вернуть отсортированный по ключам словарь?

print('Когда введете все имена введите 0 (ноль) и появится словарь')
print('Вводите имена в любой последовательности')


def thesaurus():
    count = 1
    insert = None
    names = []
    while insert != '0':
        insert = input(f'Введите имя {count}: ')
        count += 1
        names.append(insert.capitalize())
    names.pop()
    print(names)

    name_dict = {}
    for name in names:
        name_dict.setdefault(name[0], [])
        name_dict[name[0]].append({name})

    # print(name_dict)
    import pprint
    pprint.pprint(name_dict)


thesaurus()

# думаю, что в данном случае оператор распаковки будет бесполезным, т.к. работаю со списком, а не строкой.
# я правильно понимаю распаковка = "*" перед аргументами.